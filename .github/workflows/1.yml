name: FongMi
on:
  workflow_dispatch:
    inputs:
      x5kernel:
        description: "默认不支持x5"
        required: false
        default: "NoAddx5kernel"
        type: choice
        options:
          - NoAddx5kernel
          - Addx5kernel
      user_godown:
        description: "选择 TV 源分支"
        required: false
        default: "FongMi/TV"
        type: choice
        options:
          - FongMi/TV
          - okcaptain/TV
          - jadehh/FongMiTV
          - LyOuYang/TV
      source_branch:
        description: "选择 TV 分支"
        required: false
        default: "release"
        type: choice
        options:
          - release
          - dev
          - fongmi
          - kitkat
env:
    GITHUB_WORKSPACE: ${{ github.workspace }}
    GRADLE_TASKS: assembleLeanbackPythonArm64_v8aRelease assembleLeanbackPythonArmeabi_v7aRelease assembleMobilePythonArm64_v8aRelease assembleMobilePythonArmeabi_v7aRelease
    

jobs:
  build:
    name: framework:${{ matrix.framework}})
    runs-on: ubuntu-latest
    env:
      TZ: Asia/Shanghai
    strategy:
      fail-fast: false
      matrix:
        framework: ["assembleLeanbackJavaArm64_v8aRelease",
                    "assembleLeanbackJavaArmeabi_v7aRelease",
                    "assembleLeanbackPythonArm64_v8aRelease",
                    "assembleLeanbackPythonArmeabi_v7aRelease",
                    "assembleMobileJavaArm64_v8aRelease",
                    "assembleMobileJavaArmeabi_v7aRelease",
                    "assembleMobilePythonArm64_v8aRelease",
                    "assembleMobilePythonArmeabi_v7aRelease"]
    steps:
      - name: 设置开始时间
        run: |
          echo "VERSION=$(curl -s "https://raw.githubusercontent.com/${{ inputs.user_godown }}/${{ inputs.source_branch }}/app/build.gradle" | grep 'versionName' | cut -d\" -f2)" >> $GITHUB_ENV
          echo '读取源版本信息完成'
          echo "tag=$(date "+%Y.%m.%d-%H.%M")" >> $GITHUB_ENV
          echo '设置发布时间用于tag标签完成'
          echo "codeteme=$(date "+%y%m")" >> $GITHUB_ENV
          echo '设置年月时间为versionCode完成'
          echo "bteme=$(date "+%y.%m.%d")" >> $GITHUB_ENV
          echo '设置年月日时间为versionName完成'
          START_TIME=`date +'%Y-%m-%d %H:%M:%S'`
          echo "START_SECONDS=$(date --date="$START_TIME" +%s)" >> $GITHUB_ENV
          echo '设置开始时间完成'

      - name: 读取mytvbox数据
        uses: actions/checkout@v4
        with:
          repository: ne7359/mytvbox
          ref: publish
          path: code

      - name: 读取TV源数据
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.user_godown }}
          ref: ${{ inputs.source_branch }}
          path: tv

      - name: 删除X5代码     #注：默认不支持X5内核
        if: ${{ inputs.x5kernel == 'NoAddx5kernel' }}
        working-directory: tv
        run: |
          sed -i "/variant.productFlavors\[0\].name == 'mobile'/s/'mobile')/'mobile' || variant.productFlavors[0].name == 'leanback')/" app/build.gradle

      - name: 添加编译PY
        if: contains(env.GRADLE_TASKS, matrix.framework)
        working-directory: tv
        run: |
          sed -i '/proguardFiles getDefaultProguardFile/a\            signingConfig signingConfigs.debug' app/build.gradle
          sed -i '/ijkplayer/a\    implementation project('\'':pyramid'\'')' app/build.gradle
          sed -i 's/requests/requests==2.24.0/g' pyramid/build.gradle
          sed -i '/pycryptodome/a\                install '\''soupsieve==2.4'\''' pyramid/build.gradle
          sed -i '/ijkplayer/a\include '\''':pyramid''\''' settings.gradle
          echo '添加编译PY完成'

      #- name: 添加更改
        #if: ${{ inputs.source_branch == 'release' }}    # 如果不等于使用if: ${{ inputs.source_branch != 'release' }}
        #working-directory: tv
        #run: |
          #sed -i '/ijkplayer/d' settings.gradle

      - name: diy
        working-directory: tv
        run: |
          sed -i 's/versionCode [0-9]*\.[0-9]*\.[0-9]*/versionCode ${{ env.codeteme }}/g' app/build.gradle
          echo 'versionCode更改完成'
          sed -i 's/versionName "[0-9]*\.[0-9]*\.[0-9]*"/versionName "QTM Build v${{ env.bteme }}"/g' app/build.gradle
          echo '版本号更改完成'
          chmod +x $GITHUB_WORKSPACE/code/TVBox/data.sh
          $GITHUB_WORKSPACE/code/TVBox/data.sh

      - name: 安装 Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 11

      - name: 安装 Gradle
        uses: gradle/actions/setup-gradle@v3
        
      - name: 用 Gradle 构建 apk
        working-directory: tv
        run: |
          bash gradlew ${{ matrix.framework}}
 
      - name: 编译完成时间
        run: |
          echo "编译完成时间..."
          START_SECONDS=${{ env.START_SECONDS }}
          END_TIME=`date +'%Y-%m-%d %H:%M:%S'`
          END_SECONDS=$(date --date="$END_TIME" +%s)
          SECONDS=$((END_SECONDS-START_SECONDS))
          HOUR=$(( $SECONDS/3600 )) && MIN=$(( ($SECONDS-${HOUR}*3600)/60 )) && SEC=$(( $SECONDS-${HOUR}*3600-${MIN}*60 ))
          echo "BUILD_TIME=${HOUR}时${MIN}分${SEC}秒" >> $GITHUB_ENV
          find tv/app/build/outputs/apk/ -name '*.apk' -exec echo {} \;
 
      - name: 发布信息
        run: |
          echo -e "🎈 编译时间：${{ env.tag }}\\n\\n⏰ 编译用时：${{ env.BUILD_TIME }}\\n\\n★ 源码分支：${{ inputs.user_godown }} - ${{ inputs.source_branch }} v${{ env.VERSION }}\\n\\n--- " >> ${{ github.workspace }}-CHANGELOG.txt
          echo -e "<details><summary>TV版升级信息</summary>" >> ${{ github.workspace }}-CHANGELOG.txt
          if [ "${{ inputs.source_branch }}" == "release" ]; then
            echo "$(curl -s 'https://raw.githubusercontent.com/FongMi/Release/main/apk/release/leanback.json' | jq -r '.desc')" >> ${{ github.workspace }}-CHANGELOG.txt
            echo "</details>\\n\\n<details><summary>移动版升级信息</summary>" >> ${{ github.workspace }}-CHANGELOG.txt
            echo "$(curl -s 'https://raw.githubusercontent.com/FongMi/Release/main/apk/release/mobile.json' | jq -r '.desc')" >> ${{ github.workspace }}-CHANGELOG.txt
            echo "</details>" >> ${{ github.workspace }}-CHANGELOG.txt

          elif [ "${{ inputs.source_branch }}" == "fongmi" ]; then
            echo "$(curl -s 'https://raw.githubusercontent.com/FongMi/Release/main/apk/release/leanback.json' | jq -r '.desc')" >> ${{ github.workspace }}-CHANGELOG.txt
            echo "</details>\\n\\n<details><summary>移动版升级信息</summary>" >> ${{ github.workspace }}-CHANGELOG.txt
            echo "$(curl -s 'https://raw.githubusercontent.com/FongMi/Release/main/apk/release/mobile.json' | jq -r '.desc')" >> ${{ github.workspace }}-CHANGELOG.txt
            echo "</details>" >> ${{ github.workspace }}-CHANGELOG.txt
          else
            echo '没有匹配退出写CHANGELOG.txt'
          fi
 
      - name: 上传到发布
        uses: softprops/action-gh-release@v2
        with:
          name: QTM影视
          tag_name: ${{ env.tag }}
          body_path: ${{ github.workspace }}-CHANGELOG.txt
          files: ./tv/app/build/outputs/apk/*/release/*.apk
        env:
          GITHUB_TOKEN: ${{ github.token }} # 给最高的权限

      - name: 检出目标仓库
        uses: actions/checkout@v4
        with:
          repository: 'MINGERTAI/MyALL'  # 目标仓库名
          token: ${{ secrets.GH_TOKEN }}  # 使用访问令牌
          path: 'main'

      - name: 移动 APK 到指定文件夹
        run: |
          mkdir -p main/Release/tvapk
          cp ./tv/app/build/outputs/apk/*/release/*.apk main/Release/tvapk/
          cp ${GITHUB_WORKSPACE}/CHANGELOG.txt main/Release/tvapk/Release.md

      - name: 推送 APK 到目标仓库
        run: |
          cd main
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "自动推送 APK" || exit 0  # 防止如果没有文件变更导致的错误
          git push origin HEAD
        env:
          GIT_COMMITTER_NAME: github-actions
          GIT_COMMITTER_EMAIL: github-actions@github.com
          GIT_AUTHOR_NAME: github-actions
          GIT_AUTHOR_EMAIL: github-actions@github.com
